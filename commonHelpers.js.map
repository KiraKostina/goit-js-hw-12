{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["// Функція для HTTP-запитів\nconst API_KEY = \"43048239-bd17c0d5033bfd52479da7a86\";\nconst BASE_URL = \"https://pixabay.com/api/\";\n\nexport function getPhotos(query) {\n    const params = {\n        q: query,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        safesearch: true,\n        key: API_KEY,   \n  };\n  const options = new URLSearchParams(params);\n  return fetch(`${BASE_URL}?${options}`).then(res => {\n    if (!res.ok) {\n      throw new Error('Error!');\n    }\n\n    return res.json();\n  });\n}","// Функції для відображення елементів інтерфейсу\n\nexport function createMarkup(arr) {\n\n  return arr\n    .map(\n      item =>\n        `<li class=\"gallery__item\">\n        <a class=\"gallery-link\" href=\"${item.largeImageURL}\">\n        <img src=\"${item.webformatURL}\" data-source=\"${item.largeImageURL}\" alt=\"${item.tags}\">\n       \n        </a>\n        <ul class=\"list-container\">\n          <li class=\"item-description\"><h3>Likes</h3> <p>${item.likes}</p></li>\n          <li class=\"item-description\"><h3>Views</h3> <p>${item.views}</p></li>\n          <li class=\"item-description\"><h3>Comments</h3> <p>${item.comments}</p></li>\n          <li class=\"item-description\"><h3>Downloads</h3> <p>${item.downloads}</p></li>\n        </ul>\n       </li>`\n    )\n    .join('');\n}\n\n\n ","import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nimport { Spinner } from \"spin.js\";\n\nimport { getPhotos } from './js/pixabay-api';\nimport { createMarkup } from './js/render-functions';\n\nconst form = document.querySelector('.js-search-form');\nconst list = document.querySelector('.js-gallery');\nconst target = document.querySelector('.js-backdrop');\nconst lightbox = new SimpleLightbox('.gallery a', { captionsData: \"alt\", captionDelay: 250, });\n\n\nform.addEventListener('submit', handleSubmit);\n\n\nconst opts = {\n  lines: 13, // The number of lines to draw\n  length: 38, // The length of each line\n  width: 17, // The line thickness\n  radius: 45, // The radius of the inner circle\n  scale: 1, // Scales overall size of the spinner\n  corners: 1, // Corner roundness (0..1)\n  speed: 0.8, // Rounds per second\n  rotate: 0, // The rotation offset\n  animation: 'spinner-line-fade-quick', // The CSS animation name for the lines\n  direction: 1, // 1: clockwise, -1: counterclockwise\n  color: '#ffffff', // CSS color or array of colors\n  fadeColor: 'transparent', // CSS color or array of colors\n  top: '50%', // Top position relative to parent\n  left: '50%', // Left position relative to parent\n  shadow: '0 0 1px transparent', // Box-shadow for the lines\n  zIndex: 2000000000, // The z-index (defaults to 2e9)\n  className: 'spinner', // The CSS class to assign to the spinner\n  position: 'absolute', // Element positioning\n};\nconst spiner = new Spinner(opts);\n// let page = 1;\nlet searchQuery = '';\n\nfunction handleSubmit(e) {\n  e.preventDefault();\n  spinerPlay();\n  list.innerHTML = '';\n//   page = 1;\n  searchQuery = e.target['user-search-query'].value.trim();\n    getPhotos(searchQuery)\n        .then(res => {\n            if (res.hits.length === 0) {\n                // loadMorebtn.classList.add('is-hidden');\n                return iziToast.error({\n                    message:\n                        'Sorry, there are no images matching your search query. Please try again!',\n                    position: 'topRight',\n                });\n            }\n            lightbox.refresh();\n            list.innerHTML = createMarkup(res.hits);\n            lightbox.refresh();\n        })\n     \n           \n      \n    // //   if (res.total > 12) {\n    // //     loadMorebtn.classList.remove('is-hidden');\n    // //   }\n    // })\n    .catch(error => {\n      console.log(error);\n    })\n    .finally(() => {\n      spinerStop();\n    });\n}\n\n\nfunction spinerPlay() {\n  spiner.spin(target);\n  target.classList.remove('is-hidden');\n}\n\nfunction spinerStop() {\n  spiner.stop();\n  target.classList.add('is-hidden');\n}"],"names":["API_KEY","BASE_URL","getPhotos","query","params","options","res","createMarkup","arr","item","form","list","target","lightbox","SimpleLightbox","handleSubmit","opts","spiner","Spinner","searchQuery","e","spinerPlay","iziToast","error","spinerStop"],"mappings":"owBACA,MAAMA,EAAU,qCACVC,EAAW,2BAEV,SAASC,EAAUC,EAAO,CAC7B,MAAMC,EAAS,CACX,EAAGD,EACH,WAAY,QACZ,YAAa,aACb,WAAY,GACZ,IAAKH,CACb,EACQK,EAAU,IAAI,gBAAgBD,CAAM,EAC1C,OAAO,MAAM,GAAGH,CAAQ,IAAII,CAAO,EAAE,EAAE,KAAKC,GAAO,CACjD,GAAI,CAACA,EAAI,GACP,MAAM,IAAI,MAAM,QAAQ,EAG1B,OAAOA,EAAI,MACf,CAAG,CACH,CClBO,SAASC,EAAaC,EAAK,CAEhC,OAAOA,EACJ,IACCC,GACE;AAAA,wCACgCA,EAAK,aAAa;AAAA,oBACtCA,EAAK,YAAY,kBAAkBA,EAAK,aAAa,UAAUA,EAAK,IAAI;AAAA;AAAA;AAAA;AAAA,2DAIjCA,EAAK,KAAK;AAAA,2DACVA,EAAK,KAAK;AAAA,8DACPA,EAAK,QAAQ;AAAA,+DACZA,EAAK,SAAS;AAAA;AAAA,aAGxE,EACA,KAAK,EAAE,CACZ,CCVA,MAAMC,EAAO,SAAS,cAAc,iBAAiB,EAC/CC,EAAO,SAAS,cAAc,aAAa,EAC3CC,EAAS,SAAS,cAAc,cAAc,EAC9CC,EAAW,IAAIC,EAAe,aAAc,CAAE,aAAc,MAAO,aAAc,GAAG,CAAG,EAG7FJ,EAAK,iBAAiB,SAAUK,CAAY,EAG5C,MAAMC,EAAO,CACX,MAAO,GACP,OAAQ,GACR,MAAO,GACP,OAAQ,GACR,MAAO,EACP,QAAS,EACT,MAAO,GACP,OAAQ,EACR,UAAW,0BACX,UAAW,EACX,MAAO,UACP,UAAW,cACX,IAAK,MACL,KAAM,MACN,OAAQ,sBACR,OAAQ,IACR,UAAW,UACX,SAAU,UACZ,EACMC,EAAS,IAAIC,EAAQF,CAAI,EAE/B,IAAIG,EAAc,GAElB,SAASJ,EAAaK,EAAG,CACvBA,EAAE,eAAc,EAChBC,IACAV,EAAK,UAAY,GAEjBQ,EAAcC,EAAE,OAAO,mBAAmB,EAAE,MAAM,OAChDlB,EAAUiB,CAAW,EAChB,KAAKb,GAAO,CACT,GAAIA,EAAI,KAAK,SAAW,EAEpB,OAAOgB,EAAS,MAAM,CAClB,QACI,2EACJ,SAAU,UAC9B,CAAiB,EAELT,EAAS,QAAO,EAChBF,EAAK,UAAYJ,EAAaD,EAAI,IAAI,EACtCO,EAAS,QAAO,CAC5B,CAAS,EAQJ,MAAMU,GAAS,CACd,QAAQ,IAAIA,CAAK,CACvB,CAAK,EACA,QAAQ,IAAM,CACbC,GACN,CAAK,CACL,CAGA,SAASH,GAAa,CACpBJ,EAAO,KAAKL,CAAM,EAClBA,EAAO,UAAU,OAAO,WAAW,CACrC,CAEA,SAASY,GAAa,CACpBP,EAAO,KAAI,EACXL,EAAO,UAAU,IAAI,WAAW,CAClC"}